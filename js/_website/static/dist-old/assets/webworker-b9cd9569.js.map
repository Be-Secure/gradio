{"version":3,"file":"webworker-b9cd9569.js","sources":["../../../wasm/dist/webworker.js"],"sourcesContent":["function _(s){const e=[];for(const[a,t]of Object.entries(s))e.push([a,t]);return e}function y(s){let e=\"\";for(let a=0;a<s.length;a++)e+=String.fromCharCode(s[a]);return e}function m(s){return s=s.map(([e,a])=>[y(e),y(a)]),Object.fromEntries(s)}const b=(s,e)=>new Promise((a,t)=>{async function n(){return{type:\"http.request\",body:e.body,more_body:!1}}let i,p,c=new Uint8Array;async function u(o){if(o=Object.fromEntries(o.toJs()),console.debug(\"toClient\",o),o.type===\"http.response.start\")i=o.status,p=m(o.headers);else if(o.type===\"http.response.body\"){if(c=new Uint8Array([...c,...o.body]),!o.more_body){const l={status:i,headers:p,body:c};console.debug(\"HTTP response\",l),a(l)}}else throw new Error(`Unhandled ASGI event: ${o.type}`)}const h={type:\"http\",asgi:{version:\"3.0\",spec_version:\"2.1\"},http_version:\"1.1\",scheme:\"http\",method:e.method,path:e.path,query_string:e.query_string,root_path:\"\",headers:_(e.headers)};s(h,n,u)});importScripts(\"https://cdn.jsdelivr.net/pyodide/v0.23.2/full/pyodide.js\");let r,d,g;async function w(s){console.debug(\"Loading Pyodide.\"),r=await loadPyodide(),console.debug(\"Pyodide is loaded.\"),console.debug(\"Loading micropip\"),await r.loadPackage(\"micropip\");const e=r.pyimport(\"micropip\");console.debug(\"micropip is loaded.\");const a=[s.gradioWheelUrl,s.gradioClientWheelUrl];console.debug(\"Loading Gradio wheels.\",a),await e.add_mock_package(\"ffmpy\",\"0.3.0\"),await e.add_mock_package(\"orjson\",\"3.8.12\"),await e.add_mock_package(\"aiohttp\",\"3.8.4\"),await e.add_mock_package(\"multidict\",\"4.7.6\"),await r.loadPackage([\"ssl\",\"distutils\",\"setuptools\"]),await e.install.callKwargs(a,{keep_going:!0}),console.debug(\"Gradio wheels are loaded.\"),console.debug(\"Install packages.\",s.requirements),await e.install.callKwargs(s.requirements,{keep_going:!0}),console.debug(\"Packages are installed.\"),console.debug(\"Import gradio package.\"),await r.runPythonAsync(\"import gradio\"),console.debug(\"gradio package is imported.\"),console.debug(\"Define a ASGI wrapper function.\"),await r.runPythonAsync(`\n# Based on Shiny's App.call_pyodide().\n# https://github.com/rstudio/py-shiny/blob/v0.3.3/shiny/_app.py#L224-L258\nasync def _call_asgi_app_from_js(scope, receive, send):\n\t# TODO: Pretty sure there are objects that need to be destroy()'d here?\n\tscope = scope.to_py()\n\n\t# ASGI requires some values to be byte strings, not character strings. Those are\n\t# not that easy to create in JavaScript, so we let the JS side pass us strings\n\t# and we convert them to bytes here.\n\tif \"headers\" in scope:\n\t\t\t# JS doesn't have \\`bytes\\` so we pass as strings and convert here\n\t\t\tscope[\"headers\"] = [\n\t\t\t\t\t[value.encode(\"latin-1\") for value in header]\n\t\t\t\t\tfor header in scope[\"headers\"]\n\t\t\t]\n\tif \"query_string\" in scope and scope[\"query_string\"]:\n\t\t\tscope[\"query_string\"] = scope[\"query_string\"].encode(\"latin-1\")\n\tif \"raw_path\" in scope and scope[\"raw_path\"]:\n\t\t\tscope[\"raw_path\"] = scope[\"raw_path\"].encode(\"latin-1\")\n\n\tasync def rcv():\n\t\t\tevent = await receive()\n\t\t\treturn event.to_py()\n\n\tasync def snd(event):\n\t\t\tawait send(event)\n\n\tapp = gradio.wasm_utils.get_registered_app()\n\tif app is None:\n\t\traise RuntimeError(\"Gradio app has not been launched.\")\n\n\tawait app(scope, rcv, snd)\n`),g=r.globals.get(\"_call_asgi_app_from_js\"),console.debug(\"The ASGI wrapper function is defined.\"),console.debug(\"Mock async libraries.\"),await r.runPythonAsync(`\nasync def mocked_anyio_to_thread_run_sync(func, *args, cancellable=False, limiter=None):\n\treturn func(*args)\n\nimport anyio.to_thread\nanyio.to_thread.run_sync = mocked_anyio_to_thread_run_sync\n\t`),console.debug(\"Async libraries are mocked.\"),console.debug(\"Set matplotlib backend.\"),await r.runPythonAsync(`\nimport matplotlib\nmatplotlib.use(\"agg\")\n`),console.debug(\"matplotlib backend is set.\")}self.onmessage=async s=>{const e=s.data;console.debug(\"worker.onmessage\",e);const a=s.ports[0];try{if(e.type===\"init\"){d=w({gradioWheelUrl:e.data.gradioWheelUrl,gradioClientWheelUrl:e.data.gradioClientWheelUrl,requirements:e.data.requirements});const t={type:\"reply:success\",data:null};a.postMessage(t)}if(d==null)throw new Error(\"Pyodide Initialization is not started.\");switch(await d,e.type){case\"echo\":{const t={type:\"reply:success\",data:e.data};a.postMessage(t);break}case\"run-python\":{const n={type:\"reply:success\",data:{result:await r.runPythonAsync(e.data.code)}};a.postMessage(n);break}case\"http-request\":{const t=e.data.request,i={type:\"reply:success\",data:{response:await b(g,t)}};a.postMessage(i);break}}}catch(t){const n={type:\"reply:error\",error:t};a.postMessage(n)}};\n"],"names":["_","s","t","y","m","b","n","i","p","u","o","l","h","r","d","g","w"],"mappings":"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"}